{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/gwon-oseo/Talksign/apps/app/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// 환경 변수에서 Supabase 설정 가져오기\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n\n// 필수 환경 변수 검증\nif (!supabaseUrl) {\n  throw new Error('Missing NEXT_PUBLIC_SUPABASE_URL environment variable')\n}\n\nif (!supabaseAnonKey) {\n  throw new Error('Missing NEXT_PUBLIC_SUPABASE_ANON_KEY environment variable')\n}\n\nif (!supabaseServiceKey) {\n  console.warn('Missing SUPABASE_SERVICE_ROLE_KEY - using anon key for service operations')\n}\n\n// Supabase 클라이언트 생성\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// 서버 사이드에서 사용할 클라이언트 (Service Role Key 사용)\nexport const supabaseAdmin = createClient(\n  supabaseUrl,\n  supabaseServiceKey || supabaseAnonKey,\n  {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false\n    }\n  }\n)\n\n// 서버 API 호출을 위한 기본 URL\nexport const API_BASE_URL = `${supabaseUrl}/functions/v1/make-server-e83d4894`\n\n// API 요청 헬퍼 함수\nexport async function apiRequest(endpoint: string, options: RequestInit = {}) {\n  const url = `${API_BASE_URL}${endpoint}`\n  \n  const defaultHeaders: Record<string, string> = {\n    'Content-Type': 'application/json',\n  }\n\n  // 현재 세션에서 액세스 토큰 가져오기\n  const { data: { session } } = await supabase.auth.getSession()\n  if (session?.access_token) {\n    defaultHeaders['Authorization'] = `Bearer ${session.access_token}`\n  }\n\n  const response = await fetch(url, {\n    ...options,\n    headers: {\n      ...defaultHeaders,\n      ...options.headers,\n    },\n  })\n\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({}))\n    throw new Error(errorData.error || `HTTP error! status: ${response.status}`)\n  }\n\n  return response.json()\n}\n\n// Enhanced type definitions based on database schema\nexport type UserRole = 'freelancer' | 'client' | 'admin'\nexport type QuoteStatus = 'draft' | 'sent' | 'approved' | 'rejected' | 'expired'\nexport type ContractStatus = 'draft' | 'sent' | 'completed'\nexport type PaymentStatus = 'pending' | 'processing' | 'completed' | 'failed' | 'refunded'\n\nexport interface QuoteItem {\n  id: string\n  description: string\n  quantity: number\n  unit_price: number\n  total: number\n}\n\nexport interface DigitalSignature {\n  signature_data: string\n  signed_by: string\n  signed_at: string\n  ip_address?: string\n}\n\nexport interface NotificationChannel {\n  type: 'in_app' | 'email' | 'kakao_talk'\n  enabled: boolean\n}\n\nexport type Database = {\n  public: {\n    Tables: {\n      users: {\n        Row: {\n          id: string\n          email: string\n          name: string\n          phone?: string\n          role: UserRole\n          business_name?: string\n          business_number?: string\n          business_address?: string\n          avatar_url?: string\n          timezone: string\n          created_at: string\n          updated_at: string\n        }\n        Insert: {\n          id: string\n          email: string\n          name: string\n          phone?: string\n          role?: UserRole\n          business_name?: string\n          business_number?: string\n          business_address?: string\n          avatar_url?: string\n          timezone?: string\n          created_at?: string\n          updated_at?: string\n        }\n        Update: {\n          email?: string\n          name?: string\n          phone?: string\n          role?: UserRole\n          business_name?: string\n          business_number?: string\n          business_address?: string\n          avatar_url?: string\n          timezone?: string\n          updated_at?: string\n        }\n      }\n      quotes: {\n        Row: {\n          id: string\n          user_id: string\n          client_name: string\n          client_email: string\n          client_phone?: string\n          client_company?: string\n          title: string\n          description?: string\n          items: QuoteItem[]\n          subtotal: number\n          tax_rate: number\n          tax_amount: number\n          total_amount: number\n          status: QuoteStatus\n          expires_at?: string\n          approved_at?: string\n          created_at: string\n          updated_at: string\n        }\n        Insert: {\n          id?: string\n          user_id: string\n          client_name: string\n          client_email: string\n          client_phone?: string\n          client_company?: string\n          title: string\n          description?: string\n          items: QuoteItem[]\n          subtotal: number\n          tax_rate?: number\n          status?: QuoteStatus\n          expires_at?: string\n          created_at?: string\n          updated_at?: string\n        }\n        Update: {\n          client_name?: string\n          client_email?: string\n          client_phone?: string\n          client_company?: string\n          title?: string\n          description?: string\n          items?: QuoteItem[]\n          subtotal?: number\n          tax_rate?: number\n          status?: QuoteStatus\n          expires_at?: string\n          approved_at?: string\n          updated_at?: string\n        }\n      }\n      contracts: {\n        Row: {\n          id: string\n          quote_id: string\n          user_id: string\n          title: string\n          content: string\n          terms_and_conditions?: string\n          attachments: unknown[]\n          client_signature?: DigitalSignature\n          freelancer_signature?: DigitalSignature\n          signed_at?: string\n          status: ContractStatus\n          created_at: string\n          updated_at: string\n        }\n        Insert: {\n          id?: string\n          quote_id: string\n          user_id: string\n          title: string\n          content: string\n          terms_and_conditions?: string\n          attachments?: unknown[]\n          client_signature?: DigitalSignature\n          freelancer_signature?: DigitalSignature\n          signed_at?: string\n          status?: ContractStatus\n          created_at?: string\n          updated_at?: string\n        }\n        Update: {\n          title?: string\n          content?: string\n          terms_and_conditions?: string\n          attachments?: unknown[]\n          client_signature?: DigitalSignature\n          freelancer_signature?: DigitalSignature\n          signed_at?: string\n          status?: ContractStatus\n          updated_at?: string\n        }\n      }\n      payments: {\n        Row: {\n          id: string\n          contract_id: string\n          user_id: string\n          amount: number\n          currency: string\n          payment_method?: string\n          pg_provider?: string\n          transaction_id?: string\n          pg_transaction_id?: string\n          status: PaymentStatus\n          paid_at?: string\n          receipt_url?: string\n          tax_invoice_url?: string\n          created_at: string\n          updated_at: string\n        }\n        Insert: {\n          id?: string\n          contract_id: string\n          user_id: string\n          amount: number\n          currency?: string\n          payment_method?: string\n          pg_provider?: string\n          transaction_id?: string\n          pg_transaction_id?: string\n          status?: PaymentStatus\n          paid_at?: string\n          receipt_url?: string\n          tax_invoice_url?: string\n          created_at?: string\n          updated_at?: string\n        }\n        Update: {\n          payment_method?: string\n          pg_provider?: string\n          transaction_id?: string\n          pg_transaction_id?: string\n          status?: PaymentStatus\n          paid_at?: string\n          receipt_url?: string\n          tax_invoice_url?: string\n          updated_at?: string\n        }\n      }\n      notifications: {\n        Row: {\n          id: string\n          user_id: string\n          type: string\n          title: string\n          message: string\n          quote_id?: string\n          contract_id?: string\n          payment_id?: string\n          channels: NotificationChannel[]\n          sent_at?: string\n          read_at?: string\n          kakao_template_id?: string\n          kakao_message_id?: string\n          created_at: string\n        }\n        Insert: {\n          id?: string\n          user_id: string\n          type: string\n          title: string\n          message: string\n          quote_id?: string\n          contract_id?: string\n          payment_id?: string\n          channels?: NotificationChannel[]\n          sent_at?: string\n          kakao_template_id?: string\n          kakao_message_id?: string\n          created_at?: string\n        }\n        Update: {\n          sent_at?: string\n          read_at?: string\n          kakao_message_id?: string\n        }\n      }\n      recurring_payments: {\n        Row: {\n          id: string\n          user_id: string\n          contract_id?: string\n          amount: number\n          currency: string\n          interval_type: string\n          interval_count: number\n          start_date: string\n          end_date?: string\n          next_payment_date?: string\n          is_active: boolean\n          created_at: string\n          updated_at: string\n        }\n        Insert: {\n          id?: string\n          user_id: string\n          contract_id?: string\n          amount: number\n          currency?: string\n          interval_type: string\n          interval_count?: number\n          start_date: string\n          end_date?: string\n          next_payment_date?: string\n          is_active?: boolean\n          created_at?: string\n          updated_at?: string\n        }\n        Update: {\n          amount?: number\n          currency?: string\n          interval_type?: string\n          interval_count?: number\n          start_date?: string\n          end_date?: string\n          next_payment_date?: string\n          is_active?: boolean\n          updated_at?: string\n        }\n      }\n      access_tokens: {\n        Row: {\n          id: string\n          token: string\n          entity_type: string\n          entity_id: string\n          expires_at: string\n          used_at?: string\n          created_at: string\n        }\n        Insert: {\n          id?: string\n          token: string\n          entity_type: string\n          entity_id: string\n          expires_at: string\n          used_at?: string\n          created_at?: string\n        }\n        Update: {\n          used_at?: string\n        }\n      }\n      customers: {\n        Row: {\n          id: string\n          user_id: string\n          company_name: string\n          representative_name: string\n          contact_person?: string\n          business_registration_number?: string\n          email: string\n          phone: string\n          address?: string\n          created_at: string\n          updated_at: string\n        }\n        Insert: {\n          id?: string\n          user_id: string\n          company_name: string\n          representative_name: string\n          contact_person?: string\n          business_registration_number?: string\n          email: string\n          phone: string\n          address?: string\n          created_at?: string\n          updated_at?: string\n        }\n        Update: {\n          company_name?: string\n          representative_name?: string\n          contact_person?: string\n          business_registration_number?: string\n          email?: string\n          phone?: string\n          address?: string\n          updated_at?: string\n        }\n      }\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAEA,2BAA2B;AAC3B,MAAM;AACN,MAAM;AACN,MAAM,qBAAqB,QAAQ,GAAG,CAAC,yBAAyB;AAEhE,cAAc;AACd;;AAIA;;AAIA,IAAI,CAAC,oBAAoB;IACvB,QAAQ,IAAI,CAAC;AACf;AAGO,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,MAAM,gBAAgB,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EACtC,aACA,sBAAsB,iBACtB;IACE,MAAM;QACJ,kBAAkB;QAClB,gBAAgB;IAClB;AACF;AAIK,MAAM,eAAe,GAAG,YAAY,kCAAkC,CAAC;AAGvE,eAAe,WAAW,QAAgB,EAAE,UAAuB,CAAC,CAAC;IAC1E,MAAM,MAAM,GAAG,eAAe,UAAU;IAExC,MAAM,iBAAyC;QAC7C,gBAAgB;IAClB;IAEA,sBAAsB;IACtB,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IAC5D,IAAI,SAAS,cAAc;QACzB,cAAc,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,QAAQ,YAAY,EAAE;IACpE;IAEA,MAAM,WAAW,MAAM,MAAM,KAAK;QAChC,GAAG,OAAO;QACV,SAAS;YACP,GAAG,cAAc;YACjB,GAAG,QAAQ,OAAO;QACpB;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;QACvD,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;IAC7E;IAEA,OAAO,SAAS,IAAI;AACtB","debugId":null}}]
}