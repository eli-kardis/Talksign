{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/gwon-oseo/Talksign/apps/app/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,KAM6C;QAN7C,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD,GAN7C;IAOb,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,qIAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/gwon-oseo/Talksign/apps/app/src/components/ScheduleDetailPopup.tsx"],"sourcesContent":["import React from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from './ui/dialog';\nimport { Badge } from './ui/badge';\nimport { Button } from './ui/button';\nimport { AlertCircle, Users, FileText, TrendingUp, CheckCircle, Calendar as CalendarIcon, Clock, Edit, Trash2 } from 'lucide-react';\n\ninterface ScheduleItem {\n  id: number;\n  title: string;\n  date: string;\n  time: string;\n  type: 'task' | 'meeting' | 'deadline' | 'presentation' | 'launch';\n  priority: 'low' | 'medium' | 'high';\n  description?: string;\n}\n\ninterface ScheduleDetailPopupProps {\n  schedule: ScheduleItem | null;\n  isOpen: boolean;\n  onClose: () => void;\n  onEdit?: (schedule: ScheduleItem) => void;\n  onDelete?: (id: number) => void;\n}\n\nexport function ScheduleDetailPopup({ \n  schedule, \n  isOpen, \n  onClose, \n  onEdit, \n  onDelete \n}: ScheduleDetailPopupProps) {\n  if (!schedule) return null;\n\n  const getScheduleIcon = (type: string) => {\n    switch (type) {\n      case 'deadline':\n        return <AlertCircle className=\"w-5 h-5 text-destructive\" />;\n      case 'meeting':\n        return <Users className=\"w-5 h-5 text-primary\" />;\n      case 'presentation':\n        return <FileText className=\"w-5 h-5 text-accent-foreground\" />;\n      case 'launch':\n        return <TrendingUp className=\"w-5 h-5 text-primary\" />;\n      case 'task':\n        return <CheckCircle className=\"w-5 h-5 text-muted-foreground\" />;\n      default:\n        return <CalendarIcon className=\"w-5 h-5 text-muted-foreground\" />;\n    }\n  };\n\n  const getPriorityBadge = (priority: string) => {\n    switch (priority) {\n      case 'high':\n        return 'bg-destructive/20 text-destructive';\n      case 'medium':\n        return 'bg-accent text-accent-foreground';\n      case 'low':\n        return 'bg-muted text-muted-foreground';\n      default:\n        return 'bg-muted text-muted-foreground';\n    }\n  };\n\n  const getPriorityText = (priority: string) => {\n    switch (priority) {\n      case 'high':\n        return '긴급';\n      case 'medium':\n        return '보통';\n      case 'low':\n        return '낮음';\n      default:\n        return '보통';\n    }\n  };\n\n  const getTypeText = (type: string) => {\n    switch (type) {\n      case 'deadline':\n        return '마감일';\n      case 'meeting':\n        return '회의';\n      case 'presentation':\n        return '발표';\n      case 'launch':\n        return '런칭';\n      case 'task':\n        return '작업';\n      default:\n        return '일정';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ko-KR', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      weekday: 'long'\n    });\n  };\n\n  const formatTime = (timeString: string) => {\n    const [hours, minutes] = timeString.split(':');\n    const hour = parseInt(hours);\n    const ampm = hour >= 12 ? '오후' : '오전';\n    const displayHour = hour > 12 ? hour - 12 : hour === 0 ? 12 : hour;\n    return `${ampm} ${displayHour}:${minutes}`;\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"sm:max-w-[500px]\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-3\">\n            {getScheduleIcon(schedule.type)}\n            <span className=\"text-lg font-semibold\">{schedule.title}</span>\n          </DialogTitle>\n        </DialogHeader>\n        \n        <div className=\"space-y-4\">\n          {/* 일정 정보 */}\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center gap-2\">\n              <CalendarIcon className=\"w-4 h-4 text-muted-foreground\" />\n              <span className=\"text-sm font-medium\">날짜</span>\n              <span className=\"text-sm text-foreground\">{formatDate(schedule.date)}</span>\n            </div>\n            \n            <div className=\"flex items-center gap-2\">\n              <Clock className=\"w-4 h-4 text-muted-foreground\" />\n              <span className=\"text-sm font-medium\">시간</span>\n              <span className=\"text-sm text-foreground\">{formatTime(schedule.time)}</span>\n            </div>\n            \n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-medium\">타입</span>\n              <Badge className=\"text-xs bg-secondary text-secondary-foreground\">\n                {getTypeText(schedule.type)}\n              </Badge>\n            </div>\n            \n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-medium\">우선순위</span>\n              <Badge className={`text-xs ${getPriorityBadge(schedule.priority)}`}>\n                {getPriorityText(schedule.priority)}\n              </Badge>\n            </div>\n          </div>\n\n          {/* 설명 */}\n          {schedule.description && (\n            <div className=\"space-y-2\">\n              <span className=\"text-sm font-medium\">설명</span>\n              <div className=\"p-3 bg-secondary rounded-lg\">\n                <p className=\"text-sm text-foreground whitespace-pre-wrap\">\n                  {schedule.description}\n                </p>\n              </div>\n            </div>\n          )}\n\n          {/* 액션 버튼 */}\n          {(onEdit || onDelete) && (\n            <div className=\"flex justify-end gap-2 pt-4 border-t\">\n              <Button variant=\"outline\" onClick={onClose}>\n                닫기\n              </Button>\n              {onEdit && (\n                <Button \n                  variant=\"outline\" \n                  onClick={() => {\n                    onEdit(schedule);\n                    onClose();\n                  }}\n                  className=\"flex items-center gap-2\"\n                >\n                  <Edit className=\"w-4 h-4\" />\n                  수정\n                </Button>\n              )}\n              {onDelete && (\n                <Button \n                  variant=\"destructive\" \n                  onClick={() => {\n                    onDelete(schedule.id);\n                    onClose();\n                  }}\n                  className=\"flex items-center gap-2\"\n                >\n                  <Trash2 className=\"w-4 h-4\" />\n                  삭제\n                </Button>\n              )}\n            </div>\n          )}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 472, "column": 0}, "map": {"version":3,"sources":["file:///Users/gwon-oseo/Talksign/apps/app/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Card } from './ui/card';\nimport { Button } from './ui/button';\nimport { Progress } from './ui/progress';\nimport { Badge } from './ui/badge';\nimport { ImageWithFallback } from './ui/ImageWithFallback';\nimport { FileText, CreditCard, CheckCircle, Clock, TrendingUp, Users, Calendar, CalendarClock, AlertCircle } from 'lucide-react';\nimport { supabase } from '@/lib/supabase';\nimport { ScheduleDetailPopup } from './ScheduleDetailPopup';\n\ninterface ScheduleItem {\n  id: number;\n  title: string;\n  date: string;\n  time: string;\n  type: 'task' | 'meeting' | 'deadline' | 'presentation' | 'launch';\n  priority: 'low' | 'medium' | 'high';\n  description?: string;\n}\n\ninterface DashboardStats {\n  lastMonthRevenue: number;\n  monthlyRevenue: number;\n  unpaidAmount: number;\n  contractConversionRate: number;\n}\n\ninterface ApiResponse<T> {\n  data: T[];\n  status?: number;\n  error?: string;\n}\n\ninterface Quote {\n  id: string;\n  status: string;\n  amount?: number;\n}\n\ninterface Contract {\n  id: string;\n  status: string;\n}\n\ninterface Payment {\n  id: string;\n  amount: number;\n  status: string;\n  created_at?: string;\n}\n\ninterface WorkflowStep {\n  step: string;\n  count: number;\n  color: string;\n}\n\ninterface DashboardProps {\n  onNavigate: (view: string) => void;\n  schedules: ScheduleItem[];\n  schedulesLoading?: boolean;\n}\n\nexport function Dashboard({ onNavigate, schedules, schedulesLoading = false }: DashboardProps) {\n  const router = useRouter();\n  const [stats, setStats] = useState<DashboardStats>({\n    lastMonthRevenue: 0,\n    monthlyRevenue: 0,\n    unpaidAmount: 0,\n    contractConversionRate: 0\n  });\n  const [workflowSteps, setWorkflowSteps] = useState<WorkflowStep[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedSchedule, setSelectedSchedule] = useState<ScheduleItem | null>(null);\n  const [isSchedulePopupOpen, setIsSchedulePopupOpen] = useState(false);\n\n  // 실제 데이터 가져오기 + 주기적 업데이트\n  useEffect(() => {\n    let mounted = true;\n    let intervalId: NodeJS.Timeout;\n    \n    const timeoutId = setTimeout(() => {\n      if (mounted) {\n        console.warn('Dashboard data loading timeout, setting default values');\n        setLoading(false);\n      }\n    }, 10000); // 10초 타임아웃\n\n    const loadData = async () => {\n      try {\n        await fetchDashboardData();\n      } catch (error) {\n        console.error('Dashboard data loading failed:', error);\n      } finally {\n        clearTimeout(timeoutId);\n      }\n    };\n\n    // 초기 데이터 로드\n    loadData();\n\n    // 5분마다 데이터 새로고침 (더 실시간 업데이트)\n    intervalId = setInterval(() => {\n      if (mounted) {\n        fetchDashboardData().catch(error => {\n          console.error('Dashboard periodic update failed:', error);\n        });\n      }\n    }, 5 * 60 * 1000); // 5분\n\n    return () => {\n      mounted = false;\n      clearTimeout(timeoutId);\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, []);\n\n  const fetchDashboardData = async () => {\n    try {\n      setLoading(true);\n      \n      // 현재 사용자 확인\n      const { data: { user }, error: userError } = await supabase.auth.getUser();\n      console.log('Dashboard user check:', user?.id);\n\n      if (userError) {\n        console.error('User authentication error:', userError);\n        setLoading(false);\n        return;\n      }\n\n      if (!user) {\n        console.log('No authenticated user found');\n        // 로그인되지 않은 상태라면 기본값으로 표시\n        setStats({\n          lastMonthRevenue: 0,\n          monthlyRevenue: 0,\n          unpaidAmount: 0,\n          contractConversionRate: 0\n        });\n        setWorkflowSteps([\n          { step: \"견적서 발송\", count: 0, color: \"bg-accent text-accent-foreground\" },\n          { step: \"견적서 승인\", count: 0, color: \"bg-accent text-accent-foreground\" },\n          { step: \"계약서 발송\", count: 0, color: \"bg-accent text-accent-foreground\" },\n          { step: \"계약 완료\", count: 0, color: \"bg-accent text-accent-foreground\" }\n        ]);\n        setLoading(false);\n        return;\n      }\n\n      // 현재 월 시작/끝 날짜\n      const now = new Date();\n      const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n      const endOfMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n      \n      // 지난 달 시작/끝 날짜\n      const startOfLastMonth = new Date(now.getFullYear(), now.getMonth() - 1, 1);\n      const endOfLastMonth = new Date(now.getFullYear(), now.getMonth(), 0);\n\n      // 병렬로 데이터 가져오기 (성능 향상) with timeout - 필요한 필드만 선택해서 성능 개선\n      const dataPromises = [\n        supabase.from('quotes').select('id, status, total_amount, created_at').eq('user_id', user.id),\n        supabase.from('contracts').select('id, status, created_at').eq('user_id', user.id),\n        supabase.from('payments').select('id, amount, status, created_at').eq('user_id', user.id)\n      ];\n\n      // 5초 타임아웃으로 데이터 가져오기\n      const timeoutPromise = new Promise((_, reject) => \n        setTimeout(() => reject(new Error('Database query timeout')), 5000)\n      );\n\n      const [quotesResult, contractsResult, paymentsResult] = await Promise.allSettled(\n        dataPromises.map(promise => Promise.race([promise, timeoutPromise]))\n      );\n\n      // 결과 처리\n      const quotes = quotesResult.status === 'fulfilled' ? (quotesResult.value as ApiResponse<Quote>)?.data || [] : [];\n      const contracts = contractsResult.status === 'fulfilled' ? (contractsResult.value as ApiResponse<Contract>)?.data || [] : [];\n      const payments = paymentsResult.status === 'fulfilled' ? (paymentsResult.value as ApiResponse<Payment>)?.data || [] : [];\n\n      // 에러 로깅 (하지만 계속 진행)\n      if (quotesResult.status === 'rejected') {\n        console.warn('Failed to fetch quotes:', quotesResult.reason);\n      }\n      if (contractsResult.status === 'rejected') {\n        console.warn('Failed to fetch contracts:', contractsResult.reason);\n      }\n      if (paymentsResult.status === 'rejected') {\n        console.warn('Failed to fetch payments:', paymentsResult.reason);\n      }\n\n      // 새로운 통계 계산\n      \n      // 1. 지난달 매출 계산\n      const lastMonthRevenue = payments\n        .filter((p: Payment) => \n          p.created_at &&\n          p.status === 'completed' && \n          new Date(p.created_at) >= startOfLastMonth && \n          new Date(p.created_at) <= endOfLastMonth\n        )\n        .reduce((sum: number, p: Payment) => sum + (p.amount || 0), 0);\n      \n      // 2. 이번달 매출 계산\n      const monthlyRevenue = payments\n        .filter((p: Payment) => \n          p.created_at &&\n          p.status === 'completed' && \n          new Date(p.created_at) >= startOfMonth && \n          new Date(p.created_at) <= endOfMonth\n        )\n        .reduce((sum: number, p: Payment) => sum + (p.amount || 0), 0);\n      \n      // 3. 미결제 금액 계산 (pending, processing 상태의 결제)\n      const unpaidAmount = payments\n        .filter((p: Payment) => p.status === 'pending' || p.status === 'processing')\n        .reduce((sum: number, p: Payment) => sum + (p.amount || 0), 0);\n      \n      // 4. 계약 전환율 계산 (승인된 견적서 중에서 계약서로 전환된 비율)\n      const approvedQuotesCount = quotes.filter((q: any) => q.status === 'approved').length;\n      const contractsFromQuotesCount = contracts.length; // 모든 계약서는 견적서에서 나온 것으로 가정\n      const contractConversionRate = approvedQuotesCount > 0 \n        ? Math.round((contractsFromQuotesCount / approvedQuotesCount) * 100) \n        : 0;\n\n      setStats({\n        lastMonthRevenue,\n        monthlyRevenue,\n        unpaidAmount,\n        contractConversionRate\n      });\n\n      // 워크플로우 단계별 계산 - 실제 비즈니스 플로우에 맞게 정밀하게 수정\n      \n      // 1. 견적서 발송: 고객에게 발송된 견적서 (sent 상태)\n      const sentQuotes = quotes.filter((q: any) => q.status === 'sent').length;\n      \n      // 2. 견적서 승인: 고객이 승인한 견적서 (approved 상태)\n      const approvedQuotes = quotes.filter((q: any) => q.status === 'approved').length;\n      \n      // 3. 계약서 발송: 견적서 승인 후 발송된 계약서 (sent 상태)\n      const sentContracts = contracts.filter((c: any) => c.status === 'sent').length;\n      \n      // 4. 계약 완료: 서명 및 모든 절차가 완료된 계약 (completed 상태)\n      const completedContracts = contracts.filter((c: any) => c.status === 'completed').length;\n      \n      console.log('Dashboard workflow data:', {\n        sentQuotes,\n        approvedQuotes, \n        sentContracts,\n        completedContracts,\n        totalQuotes: quotes.length,\n        totalContracts: contracts.length,\n        quoteStatuses: quotes.map(q => q.status),\n        contractStatuses: contracts.map(c => c.status),\n        paymentStatuses: payments.map(p => p.status)\n      });\n\n      setWorkflowSteps([\n        { step: \"견적서 발송\", count: sentQuotes, color: \"bg-accent text-accent-foreground\" },\n        { step: \"견적서 승인\", count: approvedQuotes, color: \"bg-accent text-accent-foreground\" },\n        { step: \"계약서 발송\", count: sentContracts, color: \"bg-accent text-accent-foreground\" },\n        { step: \"계약 완료\", count: completedContracts, color: \"bg-accent text-accent-foreground\" }\n      ]);\n\n    } catch (error) {\n      console.error('대시보드 데이터 로딩 실패:', error);\n      \n      // 오류 발생시 기본 데이터 설정\n      setStats({\n        lastMonthRevenue: 0,\n        monthlyRevenue: 0,\n        unpaidAmount: 0,\n        contractConversionRate: 0\n      });\n      setWorkflowSteps([\n        { step: \"견적서 발송\", count: 0, color: \"bg-accent text-accent-foreground\" },\n        { step: \"견적서 승인\", count: 0, color: \"bg-accent text-accent-foreground\" },\n        { step: \"계약서 발송\", count: 0, color: \"bg-accent text-accent-foreground\" },\n        { step: \"계약 완료\", count: 0, color: \"bg-accent text-accent-foreground\" }\n      ]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const getStatusBadge = (status: string) => {\n    const variants = {\n      \"승인됨\": \"bg-primary/20 text-primary\",\n      \"대기중\": \"bg-secondary text-secondary-foreground\",\n      \"계약 진행중\": \"bg-accent text-accent-foreground\"\n    };\n    return variants[status as keyof typeof variants] || \"bg-muted text-muted-foreground\";\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('ko-KR').format(amount) + '원';\n  };\n\n  const getScheduleIcon = (type: string) => {\n    switch (type) {\n      case 'deadline':\n        return <AlertCircle className=\"w-4 h-4 text-destructive\" />;\n      case 'meeting':\n        return <Users className=\"w-4 h-4 text-primary\" />;\n      case 'presentation':\n        return <FileText className=\"w-4 h-4 text-accent-foreground\" />;\n      case 'launch':\n        return <TrendingUp className=\"w-4 h-4 text-primary\" />;\n      case 'task':\n        return <CheckCircle className=\"w-4 h-4 text-muted-foreground\" />;\n      default:\n        return <Calendar className=\"w-4 h-4 text-muted-foreground\" />;\n    }\n  };\n\n  const getPriorityBadge = (priority: string) => {\n    switch (priority) {\n      case 'high':\n        return 'bg-destructive/20 text-destructive';\n      case 'medium':\n        return 'bg-accent text-accent-foreground';\n      case 'low':\n        return 'bg-muted text-muted-foreground';\n      default:\n        return 'bg-muted text-muted-foreground';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    const today = new Date();\n    const tomorrow = new Date(today);\n    tomorrow.setDate(today.getDate() + 1);\n    \n    if (date.toDateString() === today.toDateString()) {\n      return '오늘';\n    } else if (date.toDateString() === tomorrow.toDateString()) {\n      return '내일';\n    } else {\n      return date.toLocaleDateString('ko-KR', { month: 'short', day: 'numeric' });\n    }\n  };\n\n  const handleScheduleClick = (schedule: ScheduleItem) => {\n    setSelectedSchedule(schedule);\n    setIsSchedulePopupOpen(true);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-4 md:space-y-6\">\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3 md:gap-4\">\n          {[...Array(4)].map((_, i) => (\n            <Card key={i} className=\"p-4 md:p-6 bg-card border-border\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-2 flex-1\">\n                  <div className=\"h-4 bg-muted rounded animate-pulse\"></div>\n                  <div className=\"h-8 bg-muted rounded animate-pulse\"></div>\n                </div>\n                <div className=\"w-8 h-8 bg-muted rounded animate-pulse\"></div>\n              </div>\n            </Card>\n          ))}\n        </div>\n        \n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 md:gap-6\">\n          {/* 워크플로우 스켈레톤 */}\n          <Card className=\"p-4 md:p-6 bg-card border-border\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"h-5 bg-muted rounded animate-pulse w-32\"></div>\n              <div className=\"h-8 bg-muted rounded animate-pulse w-16\"></div>\n            </div>\n            <div className=\"space-y-3\">\n              {[...Array(5)].map((_, i) => (\n                <div key={i} className=\"flex items-center justify-between p-3 bg-secondary rounded-lg\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-2 h-2 bg-muted rounded-full animate-pulse\"></div>\n                    <div className=\"h-4 bg-muted rounded animate-pulse w-20\"></div>\n                  </div>\n                  <div className=\"h-6 bg-muted rounded animate-pulse w-12\"></div>\n                </div>\n              ))}\n            </div>\n          </Card>\n\n          {/* 일정 스켈레톤 */}\n          <Card className=\"p-4 md:p-6 bg-card border-border\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"w-5 h-5 bg-muted rounded animate-pulse\"></div>\n                <div className=\"h-5 bg-muted rounded animate-pulse w-24\"></div>\n              </div>\n              <div className=\"h-8 bg-muted rounded animate-pulse w-16\"></div>\n            </div>\n            <div className=\"space-y-3\">\n              {[...Array(3)].map((_, i) => (\n                <div key={i} className=\"flex items-center justify-between p-3 bg-secondary rounded-lg\">\n                  <div className=\"flex items-start gap-3 flex-1\">\n                    <div className=\"w-4 h-4 bg-muted rounded animate-pulse\"></div>\n                    <div className=\"flex-1 space-y-2\">\n                      <div className=\"h-4 bg-muted rounded animate-pulse w-24\"></div>\n                      <div className=\"h-3 bg-muted rounded animate-pulse w-16\"></div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Card>\n        </div>\n        \n        <div className=\"text-center text-muted-foreground flex items-center justify-center gap-2\">\n          <div className=\"w-4 h-4 border-2 border-muted-foreground border-t-transparent rounded-full animate-spin\"></div>\n          데이터를 불러오는 중...\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4 md:space-y-6\">\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3 md:gap-4\">\n        <Card className=\"p-4 md:p-6 bg-card border-border\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-xs md:text-sm text-muted-foreground\">지난달 매출</p>\n              <p className=\"text-xl md:text-2xl font-medium text-foreground\">{formatCurrency(stats.lastMonthRevenue)}</p>\n            </div>\n            <TrendingUp className=\"w-6 h-6 md:w-8 md:h-8 text-muted-foreground\" />\n          </div>\n        </Card>\n\n        <Card className=\"p-4 md:p-6 bg-card border-border\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-xs md:text-sm text-muted-foreground\">이번달 매출</p>\n              <p className=\"text-xl md:text-2xl font-medium text-foreground\">{formatCurrency(stats.monthlyRevenue)}</p>\n            </div>\n            <TrendingUp className=\"w-6 h-6 md:w-8 md:h-8 text-primary\" />\n          </div>\n        </Card>\n\n        <Card className=\"p-4 md:p-6 bg-card border-border\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-xs md:text-sm text-muted-foreground\">미결제금액</p>\n              <p className=\"text-xl md:text-2xl font-medium text-foreground\">{formatCurrency(stats.unpaidAmount)}</p>\n            </div>\n            <Clock className=\"w-6 h-6 md:w-8 md:h-8 text-amber-500\" />\n          </div>\n        </Card>\n\n        <Card className=\"p-4 md:p-6 bg-card border-border\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-xs md:text-sm text-muted-foreground\">계약 전환율</p>\n              <p className=\"text-xl md:text-2xl font-medium text-foreground\">{stats.contractConversionRate}%</p>\n            </div>\n            <CheckCircle className=\"w-6 h-6 md:w-8 md:h-8 text-primary\" />\n          </div>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 md:gap-6\">\n        {/* Workflow Status */}\n        <Card className=\"p-4 md:p-6 bg-card border-border h-fit max-h-[400px]\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <h3 className=\"font-medium text-foreground\">현재 진행 상황</h3>\n            <Button variant=\"outline\" size=\"sm\" className=\"border-border text-xs md:text-sm hover:bg-accent hover:text-accent-foreground transition-colors\" onClick={() => router.push('/documents/quotes')}>전체보기</Button>\n          </div>\n          \n          <div className=\"space-y-2 max-h-[300px] overflow-y-auto [&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]\">\n            {workflowSteps.map((item, index) => {\n              const totalItems = workflowSteps.reduce((sum, step) => sum + step.count, 0);\n              const percentage = totalItems > 0 ? (item.count / totalItems) * 100 : 0;\n              \n              return (\n                <div key={index} className=\"p-2 md:p-3 bg-secondary rounded-lg border border-border\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2 md:gap-3\">\n                      <div className=\"w-2 h-2 bg-primary rounded-full\"></div>\n                      <span className=\"text-sm text-foreground\">{item.step}</span>\n                    </div>\n                    <Badge className=\"text-xs bg-accent text-accent-foreground\">\n                      {item.count}건\n                    </Badge>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </Card>\n\n        {/* Schedule Management */}\n        <Card className=\"p-4 md:p-6 bg-card border-border h-fit max-h-[400px]\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <div className=\"flex items-center gap-2\">\n              <CalendarClock className=\"w-5 h-5 text-primary\" />\n              <h3 className=\"font-medium text-foreground\">일정 관리</h3>\n            </div>\n            <Button variant=\"outline\" size=\"sm\" className=\"border-border text-xs md:text-sm hover:bg-accent hover:text-accent-foreground transition-colors\" onClick={() => router.push('/schedule')}>전체보기</Button>\n          </div>\n          \n          <div className=\"max-h-[300px] overflow-y-auto [&::-webkit-scrollbar]:hidden [-ms-overflow-style:none] [scrollbar-width:none]\">\n            {schedulesLoading ? (\n              // 로딩 상태\n              <div className=\"space-y-2\">\n                {[...Array(3)].map((_, i) => (\n                  <div key={i} className=\"flex items-center justify-between p-2 md:p-3 bg-secondary rounded-lg border border-border\">\n                    <div className=\"flex items-start gap-2 md:gap-3 flex-1\">\n                      <div className=\"w-4 h-4 bg-muted rounded animate-pulse\"></div>\n                      <div className=\"flex-1 space-y-2\">\n                        <div className=\"h-4 bg-muted rounded animate-pulse w-3/4\"></div>\n                        <div className=\"h-3 bg-muted rounded animate-pulse w-1/2\"></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : schedules.length === 0 ? (\n              // 빈 상태\n              <div className=\"text-center py-6 text-muted-foreground\">\n                <Calendar className=\"w-6 h-6 mx-auto mb-2 opacity-50\" />\n                <p className=\"text-sm\">예정된 일정이 없습니다</p>\n                <Button \n                  variant=\"ghost\" \n                  size=\"sm\" \n                  onClick={() => onNavigate('schedule')}\n                  className=\"mt-2 text-primary hover:text-primary/80\"\n                >\n                  일정 추가하기\n                </Button>\n              </div>\n            ) : (\n              // 일정 목록\n              <div className=\"space-y-2\">\n                {schedules.slice(0, 4).map((schedule) => (\n                  <div \n                    key={schedule.id} \n                    className=\"flex items-center justify-between p-2 md:p-3 bg-secondary rounded-lg border border-border cursor-pointer hover:bg-secondary/80 transition-colors\"\n                    onClick={() => handleScheduleClick(schedule)}\n                  >\n                    <div className=\"flex items-start gap-2 md:gap-3 flex-1 min-w-0\">\n                      {getScheduleIcon(schedule.type)}\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                          <p className=\"text-sm text-foreground truncate font-medium\">\n                            {schedule.title}\n                          </p>\n                          <Badge className={`text-xs whitespace-nowrap ${getPriorityBadge(schedule.priority)}`}>\n                            {schedule.priority === 'high' ? '긴급' : schedule.priority === 'medium' ? '보통' : '낮음'}\n                          </Badge>\n                        </div>\n                        <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                          <span>{formatDate(schedule.date)}</span>\n                          <span>•</span>\n                          <span>{schedule.time}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </Card>\n        </div>\n        \n        {/* 일정 상세 팝업 */}\n        <ScheduleDetailPopup\n          schedule={selectedSchedule}\n          isOpen={isSchedulePopupOpen}\n          onClose={() => {\n            setIsSchedulePopupOpen(false);\n            setSelectedSchedule(null);\n          }}\n        />\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1692, "column": 0}, "map": {"version":3,"sources":["file:///Users/gwon-oseo/Talksign/apps/app/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { useAuth } from '@/contexts/AuthContext'\nimport { Dashboard } from '@/components/Dashboard'\nimport { supabase } from '@/lib/supabase'\n\nexport interface ScheduleItem {\n  id: number\n  title: string\n  date: string\n  time: string\n  type: \"deadline\" | \"meeting\" | \"presentation\" | \"launch\" | \"task\"\n  priority: \"high\" | \"medium\" | \"low\"\n  description?: string\n}\n\nexport default function Page() {\n  const router = useRouter()\n  const { user, isLoading } = useAuth()\n  const [schedules, setSchedules] = useState<ScheduleItem[]>([])\n  const [schedulesLoading, setSchedulesLoading] = useState(true)\n\n  // 일정 데이터 로드 (임시로 빈 배열 사용)\n  useEffect(() => {\n    // 임시로 빈 일정 배열 설정\n    setSchedules([])\n    setSchedulesLoading(false)\n  }, [])\n\n  // 네비게이션 핸들러 - 도메인 구조에 맞춰 수정\n  const onNavigate = (view: string) => {\n    switch (view) {\n      case 'documents':\n        router.push('/documents')\n        break\n      case 'finance':\n        router.push('/finance')\n        break\n      case 'schedule':\n        router.push('/schedule')\n        break\n      case 'new-quote':\n        router.push('/documents/quotes/new')\n        break\n      case 'new-contract':\n        router.push('/documents/contracts/new')\n        break\n      case 'dashboard':\n        // 이미 메인에 있으므로 아무것도 하지 않음\n        break\n      case 'login':\n        // 로그인은 accounts 도메인으로\n        window.location.href = 'https://accounts.talksign.co.kr/login'\n        break\n      case 'signup':\n        // 회원가입은 accounts 도메인으로\n        window.location.href = 'https://accounts.talksign.co.kr/signup'\n        break\n      default:\n        console.warn('Unknown navigation view:', view)\n    }\n  }\n\n  // 로딩 중일 때\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    )\n  }\n\n  // 로그인하지 않은 경우 로그인 페이지로 리다이렉트\n  if (!user) {\n    router.push('/login')\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    )\n  }\n\n  // 로그인한 사용자에게 대시보드 표시\n  return (\n    <Dashboard\n      onNavigate={onNavigate}\n      schedules={schedules}\n      schedulesLoading={schedulesLoading}\n    />\n  )\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAkBe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iJAAA,CAAA,UAAO,AAAD;IAClC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAC7D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,0BAA0B;IAC1B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,iBAAiB;YACjB,aAAa,EAAE;YACf,oBAAoB;QACtB;yBAAG,EAAE;IAEL,4BAA4B;IAC5B,MAAM,aAAa,CAAC;QAClB,OAAQ;YACN,KAAK;gBACH,OAAO,IAAI,CAAC;gBACZ;YACF,KAAK;gBACH,OAAO,IAAI,CAAC;gBACZ;YACF,KAAK;gBACH,OAAO,IAAI,CAAC;gBACZ;YACF,KAAK;gBACH,OAAO,IAAI,CAAC;gBACZ;YACF,KAAK;gBACH,OAAO,IAAI,CAAC;gBACZ;YACF,KAAK;gBAEH;YACF,KAAK;gBACH,sBAAsB;gBACtB,OAAO,QAAQ,CAAC,IAAI,GAAG;gBACvB;YACF,KAAK;gBACH,uBAAuB;gBACvB,OAAO,QAAQ,CAAC,IAAI,GAAG;gBACvB;YACF;gBACE,QAAQ,IAAI,CAAC,4BAA4B;QAC7C;IACF;IAEA,UAAU;IACV,IAAI,WAAW;QACb,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,6BAA6B;IAC7B,IAAI,CAAC,MAAM;QACT,OAAO,IAAI,CAAC;QACZ,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,qBAAqB;IACrB,qBACE,6LAAC,iJAAA,CAAA,YAAS;QACR,YAAY;QACZ,WAAW;QACX,kBAAkB;;;;;;AAGxB;GA1EwB;;QACP,qIAAA,CAAA,YAAS;QACI,iJAAA,CAAA,UAAO;;;KAFb","debugId":null}}]
}