# Title: UI & 기능 작업 분리 / 비용 최적화 규칙
# Applies to: **/*

## 목표
- UI 구조 변경 없이 기능 로직을 안전하게 유지
- 불필요한 토큰 소모 방지
- 스타일 변경과 기능 개발을 명확히 분리

## 항상 지켜야 할 것
1. **UI 구조 변경 금지**
   - 디자인 수정은 Figma 원본에서만 진행
   - Cursor에서는 레이아웃 구조는 유지하고, 기능 로직만 수정

2. **기능 로직 보존**
   - API 호출, 이벤트 핸들러, 상태관리 로직은 삭제·변경하지 않음
   - 단순 스타일 변경 시 로직 코드는 건드리지 않음

3. **작업 요청 분리**
   - 스타일/UI 변경 작업과 기능 로직 수정 작업은 별도의 요청으로 처리
   - 한 번에 두 가지 이상의 큰 변경은 금지

4. **.cursorignore 적극 활용**
   - `/public`, `/node_modules`, `/uploads`, `/dist`, 대용량 에셋 제외
   - 이미지, 비디오, 데이터 파일 등 인덱싱 불필요 리소스는 차단

5. **불필요한 재작성 방지**
   - 기존 코드를 전체 재작성하지 말고, 변경 필요한 부분만 패치
   - 설명은 간단 명료하게, 변경 이유 + 최소 코드 변경만 출력

6. **@지정 호출 사용**
   - 파일/컴포넌트/함수를 명시적으로 @로 지정하여 작업 범위 최소화
   - 선택 편집(Selection Edit) 우선 사용

7. **작업 결과물 포맷**
   - 변경 전/후 비교(diff) 중심
   - 코드 외 불필요한 장문 설명, 전체 파일 재출력은 금지

## 금지 사항
- 관련 없는 파일이나 코드 수정
- 디자인 구조를 무단 변경
- 기능과 스타일을 한 번에 뒤섞어 변경
- 대규모 리팩터링을 사전 승인 없이 진행